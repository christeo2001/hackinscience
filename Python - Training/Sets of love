// Exercise 1
// Code a function named love_meet taking 2 lists and returning a set of places visited by both

def love_meet(bob, alice):
    same = set()
    bob_flat = []
    alice_flat = []
    for i in bob:
        if i not in bob_flat:
            bob_flat.append(i)
            
    for i in alice:
        if i not in alice_flat:
            alice_flat.append(i) 
            
    max1, min1 = max(bob_flat, alice_flat), min(bob_flat, alice_flat)
    

    for i in max1:
        if i in min1:
            same.add(i)
            
    return same
    
// Exercise 2
// Code a function named affair_meet taking 3 lists and returns a set of places visited by A and S but not B


def affair_meet(bob, alice, silvester):
    same = set()
    all_place = []
    
    for i in bob:
        if i not in all_place:
            all_place.append(i)
            
    for i in alice:
        if i not in all_place:
            all_place.append(i) 
            
    for i in silvester:
        if i not in all_place:
            all_place.append(i) 
            
    
    for i in all_place:
        if i in alice and i in silvester and i not in bob:
            same.add(i)
            
    return same


if __name__ == "__main__":
    assert love_meet(
        ["IV", "III", "II", "XX", "II", "XX"],
        ["II", "IV", "II", "XIX", "XV", "IV", "II"],
    ) == {"II", "IV"}

    assert affair_meet(
        ["IV", "III", "II", "XX", "II", "XX"],
        ["II", "IV", "II", "XIX", "XV", "IV", "II"],
        ["XVIII", "XIX", "III", "I", "III", "XVIII"],
    ) == {"XIX"}




    
